{"version":3,"sources":["components/layouts/Header.js","components/todo_components/AddTodo.js","components/todo_components/SearchTodos.js","components/todo_components/Todo.js","components/todo_components/Todos.js","components/todo_components/SearchResults.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","id","to","AddTodo","onSubmit","this","bind","name","type","placeholder","value","newTodo","title","onChange","React","Component","SearchTodos","searchString","Todo","getStyle","completed","textDecoration","todo","handleChange","handleClick","e","deleteTodo","markComplete","priority","parseInt","style","concat","prioritySymbol","onClick","Todos","todos","map","key","SearchResults","match","status","completed_date","console","log","date_operator","date","join","searchMatches","listType","searchListItems","addListItems","statusSummary","matchListItems","About","App","state","notes","completed_at","addTodo","searchTodos","uri","filterUri","axios","get","then","res","setState","data","catch","delete","filter","put","target","preventDefault","post","links","toggleLinks","exact","path","render","Fragment","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.761ad241.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<h1>Todo</h1>\n\t\t\t</div>\n\t\t\t<div className=\"header-links\">\n\t\t\t\t\n\t\t\t\t<Link id='todo-link' to=\"/todo-list\">Todo List</Link>\n\t\t\t\t<Link id='about-link' to=\"/about\">About</Link>\n\t\t\t</div>\n\t\t</div>\t\n\t);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddTodo extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.props.onSubmit.bind(this)} name='new-todo-form' className=\"todo-header-form\">\n\t\t\t\t<div className=\"todo-header-form-input\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tplaceholder='Add todo...'\n\t\t\t\t\t\tvalue={this.props.newTodo.title}\n\t\t\t\t\t\tonChange={this.props.onChange.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todo-header-form-button\">\n\t\t\t\t\t<button\n\t\t\t\t\t  type=\"submit\"\n\t\t\t\t\t  value=\"\"\n\t\t\t\t\t\tclassName=\"fas fa-plus\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nAddTodo.propTypes = {\n\tnewTodo: PropTypes.object.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tonSubmit: PropTypes.func.isRequired\n}\n\nexport default AddTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchTodos extends React.Component {\n\trender() {\n\t\treturn (\t\n\t\t\t<form onSubmit={this.props.onSubmit.bind(this)} name='search-form' className=\"todo-header-form\">\n\t\t\t\t<div className=\"todo-header-form-input\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='search'\n\t\t\t\t\t\tplaceholder='Search...'\n\t\t\t\t\t\tvalue={this.props.searchString}\n\t\t\t\t\t\tonChange={this.props.onChange.bind(this)}\n\t\t\t\t />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todo-header-form-button\">\n\t\t\t\t\t<button \n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t \tvalue=''\n\t\t\t\t\t \tclassName=\"fas fa-search\">\n\t\t\t\t \t</button>\n\t\t\t \t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nSearchTodos.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n\tonSubmit: PropTypes.func.isRequired,\n\tsearchString: PropTypes.string.isRequired\n};\n\nexport default SearchTodos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Todo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(e) {\n\t\tthis.props.deleteTodo(this.props.todo.id);\n\t}\n\thandleChange(e) {\n\t\tthis.props.markComplete(this.props.todo.id);\n\t}\n\n\tprioritySymbol(priority) {\n\t\treturn priority && (parseInt(priority) > 1 ? 'exclamation' : '');\n\t}\n\n\tgetStyle = (completed) => {\n\t\treturn {\n\t\t\ttextDecoration: this.props.todo.completed ?\n\t\t\t  'line-through' :\n\t\t\t  'none'\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { title, priority, completed } = this.props.todo;\n\t\treturn (\n\t\t\t<div className=\"todo-item\" style={this.getStyle(completed)}>\n\t\t\t\t<div className=\"todo-item-title\">\n\t\t\t\t\t<input type=\"checkbox\" onChange={this.handleChange} />\n\t\t\t\t\t{ title } { ' ' }\n\t\t\t\t\t<i className={\"fas fa-\".concat(this.prioritySymbol(priority)) }></i>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todo-item-controls\">\n\t\t\t\t\t<button className=\"far fa-trash-alt\" onClick={this.handleClick}></button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTodo.propTypes = {\n\ttodo: PropTypes.object.isRequired\n};\n\nexport default Todo;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from './Todo';\n\nclass Todos extends React.Component {\n\trender() {\t\n\t\treturn (\n\t\t\t<div className=\"todos-list\">{\n\t\t\t\tthis.props.todos.map((todo) => (\n\t\t\t\t\t<Todo\n\t\t\t\t\t  key={todo.id}\n\t\t\t\t\t  todo={todo}\n\t\t\t\t\t  markComplete={this.props.markComplete}\n\t\t\t\t\t  deleteTodo={this.props.deleteTodo}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}</div>\n\t\t);\n\t}\n\n}\n\nTodos.propTypes = {\n\ttodos: PropTypes.array.isRequired,\n\tmarkComplete: PropTypes.func.isRequired,\n\tdeleteTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;\n","import React from 'react';\n\nclass SearchResults extends React.Component {\n\tstatusSummary(match) {\n\t\tlet status;\n\t\tif (match.status === 'completed') {\n\t\t\tstatus = [match.status, match.completed_date];\n\t\t\tconsole.log('first', status);\n\t\t} else if (match.date_operator) {\n\t\t\tstatus = ['do', match.date_operator, match.date];\n\t\t\tconsole.log('second', status);\n\t\t} else {\n\t\t\tstatus = [match.status]\n\t\t\tconsole.log('third', status);\n\t\t}\n\n\t\treturn status.join(' ');\n\t}\n\n  matchListItems() {\n    return (\n      this.props.searchMatches.map(match => {\n        return (\n          <li key={ match.id }>\n            { this.props.listType === 'search' ?\n            \t\tthis.searchListItems(match) :\n            \t\tthis.addListItems(match) }\n          </li>\n        )\n      })\n    )\n  }\n\n  searchListItems(match) {\n  \treturn (\n  \t\t<span>\n \t\t \t\t{ match.title } { ' ' }\n  \t\t\t({ this.statusSummary(match) })\n  \t\t</span>\n \t\t)\n  }\n\n  addListItems(match) {\n  \treturn (\n  \t\t<span>\n  \t\t\t{ match.title }\n  \t\t</span>\n\t\t)\n  }\n\n\trender(){\n\t\treturn (\n      <div className='matched-todos'>\n        <ul>\n          { this.matchListItems() }\n        </ul>\n      </div>\n\t\t);\n\t}\n}\n\nexport default SearchResults;","import React from 'react';\n\nexport default function About() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>About</h2>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\n// Custom components\nimport Header from './components/layouts/Header';\nimport AddTodo from './components/todo_components/AddTodo';\nimport SearchTodos from './components/todo_components/SearchTodos';\nimport Todos from './components/todo_components/Todos';\nimport SearchResults from './components/todo_components/SearchResults';\nimport About from './pages/About';\n\nimport './css/App.css';\n\n// TODO:\n//  Press return to submit add / search\n//  Implement search results - i think just filter and display other statussed for now\n//  Only show pending todos - on mark completed, show crossed out for 3 seconds then fade it\n//  Add link to view completed, default order completeded date desc. should be searchable\n//  Add sort by: name, priority, date added, date completed(only if showing completes), date due\n//  Add date due (and do on/after)\n//  Add grouping by priority and do dates\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // state init\n    this.state = {\n      todos: [],\n      newTodo: {\n        title: '',\n        priority: '',\n        notes: '',\n        status: '',\n        completed_at: '',\n        date: '',\n        date_operator: ''\n      },\n      searchString: '',\n      searchMatches: []\n    };\n    // event bindings\n    this.markComplete = this.markComplete.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.searchTodos = this.searchTodos.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    // resource addresses\n    this.uri = \"https://hrob-api.herokuapp.com\";\n    this.filterUri = \"https://hrob-api.herokuapp.com/filter_todos\";\n  }\n\n  componentDidMount() {\n    axios.get(this.uri.concat(\"/todos\"))\n      .then((res) => \n        this.setState({todos: res.data})\n      )\n      .catch(res => console.log(res));\n  }\n\n  deleteTodo(id) {\n    axios.delete(`${this.uri}/todos/${id}`)\n      .then((res) => \n        this.setState({todos: [...this.state.todos.filter((todo) => todo.id !== id)]}))\n      .catch(res => console.log(res));\n  }\n\n  markComplete(id) {\n    axios.put(`${this.uri}/todos/${id}`, { status: 'on_hold'})\n      .then((res) => \n        this.setState({\n          todos: this.state.todos.map((todo) => {\n            if (todo.id === id) {\n              todo.completed = !todo.completed;\n            }\n            return todo;\n          })\n        })\n      )\n    .catch(res => console.log(res));\n  };\n\n  onChange(e) {\n    axios.get(`${this.filterUri}?search_term=${e.target.value}`).then((res) =>\n      this.setState({ searchMatches: res.data }));\n    this.setState(\n      (e.target.name === 'title') ?\n        { newTodo: { [e.target.name]: e.target.value } } :\n        { searchString: e.target.value }\n      );\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if (e.target.value === '') {\n      console.log('Empty input!');\n      // TODO: highlight error\n      return;\n    }\n    switch(e.target.name) {\n      case 'new-todo-form':\n        this.addTodo();\n        this.setState({ newTodo: { title: '' } });\n        break;\n      case 'search-form':\n        this.searchTodos();\n        this.setState({ searchString: '' });\n        break;\n      default:\n        break;\n    }\n  }\n\n  addTodo() {\n    const { title, priority } =  this.state.newTodo;\n    axios.post(this.uri.concat(\"/todos\"), {\n      title,\n      priority,\n      completed: false\n    }).then((res) => {\n      this.setState({todos: [...this.state.todos, res.data]})\n    })\n  }\n\n  searchTodos() {\n    // placeholder - atm, search button not implemented\n    return ([]);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header links={{toggleLinks: this.toggleLinks}} />\n          <div className=\"container app-container\">\n            <Route exact path=\"/todo-list\"\n              render={\n                (props) => (\n                  <React.Fragment>\n                    <div className=\"todo-list-header\">\n                      <AddTodo\n                        newTodo={this.state.newTodo}\n                        onChange={this.onChange}\n                        onSubmit={this.onSubmit}\n                      />\n                      <SearchTodos\n                        searchString={this.state.searchString}\n                        onChange={this.onChange}\n                        onSubmit={this.onSubmit}\n                      />\n                    </div>\n                    <SearchResults\n                      searchMatches={this.state.searchMatches}\n                      listType={'search'} // search || add\n                    />\n                    <Todos\n                      todos={this.state.todos}\n                      markComplete={this.markComplete}\n                      deleteTodo={this.deleteTodo}\n                    />\n                  </React.Fragment>\n                )\n              }\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}