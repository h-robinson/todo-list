{"version":3,"sources":["components/layouts/Header.js","components/todo_components/AddTodo.js","components/todo_components/SearchTodos.js","components/todo_components/Todo.js","components/todo_components/Todos.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","id","to","AddTodo","state","title","priority","e","this","setState","target","name","value","preventDefault","addTodo","onSubmit","bind","type","placeholder","onChange","React","Component","SearchTodos","Todo","getStyle","completed","textDecoration","todo","handleChange","handleClick","deleteTodo","markComplete","style","onClick","Todos","todos","map","key","propTypes","PropTypes","array","isRequired","About","App","uri","axios","get","concat","then","res","data","delete","filter","post","links","toggleLinks","exact","path","render","Fragment","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14e6c52b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<h1>Todo</h1>\n\t\t\t</div>\n\t\t\t<div className=\"header-links\">\n\t\t\t\t\n\t\t\t\t<Link id='todo-link' to=\"/\">Todo List</Link>\n\t\t\t\t<Link id='about-link' to=\"/about\">About</Link>\n\t\t\t</div>\n\t\t</div>\t\n\t);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddTodo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle: \"\",\n\t\t\tpriority: 1\n\t\t}\n\t}\n\n\tonChange(e) {\n\t\tthis.setState(\n\t\t\t{ [e.target.name]: e.target.value }\n\t\t);\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.props.addTodo(this.state.title);\n\t\tthis.setState({title: \"\"});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit.bind(this)} className=\"todo-header-form\">\n\t\t\t\t<div className=\"todo-header-form-input\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tplaceholder='Add todo...'\n\t\t\t\t\t\tonChange={this.onChange.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todo-header-form-button\">\n\t\t\t\t\t<button\n\t\t\t\t\t  type=\"submit\"\n\t\t\t\t\t  value=\"\"\n\t\t\t\t\t\tclassName=\"fas fa-plus\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n\n}\n\nexport default AddTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchTodos extends React.Component {\n\trender() {\n\t\treturn (\t\n\t\t\t<form className=\"todo-header-form\">\n\t\t\t\t<div className=\"todo-header-form-input\">\n\t\t\t\t\t<input placeholder='Search...' />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todo-header-form-button\">\n\t\t\t\t\t<button \n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t \tvalue=''\n\t\t\t\t\t \tclassName=\"fas fa-search\">\n\t\t\t\t \t</button>\n\t\t\t \t</div>\n\t\t\t</form>\n\t\t);\n\t}\n\n}\n\nSearchTodos.propTypes = {};\n\nexport default SearchTodos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Todo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(e) {\n\t\tthis.props.deleteTodo(this.props.todo.id);\n\t}\n\thandleChange(e) {\n\t\tthis.props.markComplete(this.props.todo.id);\n\t}\n\n\tgetStyle = (completed) => {\n\t\treturn {\n\t\t\ttextDecoration: this.props.todo.completed ?\n\t\t\t  'line-through' :\n\t\t\t  'none'\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { id, title, completed } = this.props.todo;\n\t\treturn (\n\t\t\t<div className=\"todo-item\" style={this.getStyle(completed)}>\n\t\t\t\t<div className=\"todo-item-title\">\n\t\t\t\t\t<input type=\"checkbox\" onChange={this.handleChange} />\n\t\t\t\t\t{ title }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todo-item-controls\">\n\t\t\t\t\t<button className=\"far fa-trash-alt\" onClick={this.handleClick}></button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTodo.propTypes = {\n\ttodo: PropTypes.object.isRequired\n};\n\nexport default Todo;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from './Todo';\n\nclass Todos extends React.Component {\n\trender() {\t\n\t\treturn (\n\t\t\t<div className=\"todos-list\">{\n\t\t\t\tthis.props.todos.map((todo) => (\n\t\t\t\t\t<Todo\n\t\t\t\t\t  key={todo.id}\n\t\t\t\t\t  todo={todo}\n\t\t\t\t\t  markComplete={this.props.markComplete}\n\t\t\t\t\t  deleteTodo={this.props.deleteTodo}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}</div>\n\t\t);\n\t}\n\n}\n\nTodo.propTypes = {\n\ttodos: PropTypes.array.isRequired,\n\t// markComplete: PropTypes.function.isRequired\n}\n\nexport default Todos;\n","import React from 'react';\n\nexport default function About() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>About</h2>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\n// Custom components\nimport Header from './components/layouts/Header';\nimport AddTodo from './components/todo_components/AddTodo';\nimport SearchTodos from './components/todo_components/SearchTodos';\nimport Todos from './components/todo_components/Todos';\nimport About from './pages/About';\n\nimport './App.css';\n\n    const todos = [\n      // {\n      //   user_id: '1',\n      //   id: '1',\n      //   title: 'Get a haircut',\n      //   priority: 1,\n      //   completed: false\n      // },\n      // {\n      //   user_id: '1',\n      //   id: '2',\n      //   title: 'Get a real job',\n      //   priority: 1,\n      //   completed: false\n      // },\n      // {\n      //   user_id: '1',\n      //   id: '3',\n      //   title: 'Get retarded',\n      //   priority: 0,\n      //   completed: true\n      // }\n    ]\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {todos: todos};\n    this.markComplete = this.markComplete.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.uri = \"https://jsonplaceholder.typicode.com\";\n  }\n\n\n  componentDidMount() {\n    axios.get(this.uri.concat(\"/todos?_limit=19\")).then((res) => \n      this.setState({todos: res.data})\n    );\n  }\n\n  deleteTodo(id) {\n    axios.delete(`${this.uri}/todos/${id}`).then((res) => \n      this.setState({todos: [...this.state.todos.filter((todo) => todo.id !== id)]}))\n  }\n\n  markComplete(id) {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  addTodo(title) {\n    axios.post(this.uri.concat(\"/todos\"), {\n      title,\n      completed: false\n    }).then((res) => {\n      this.setState({todos: [...this.state.todos, res.data]})\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header links={{toggleLinks: this.toggleLinks}} />\n          <div className=\"container todo-app-container\">\n            <Route exact path=\"/\"\n              render={\n                (props) => (\n                  <React.Fragment>\n                    <div className=\"todo-header\">\n                      <AddTodo addTodo={this.addTodo}/>\n                      <SearchTodos />\n                    </div>\n                    <Todos\n                      todos={this.state.todos}\n                      markComplete={this.markComplete}\n                      deleteTodo={this.deleteTodo}\n                    />\n                  </React.Fragment>\n                )\n              }\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}